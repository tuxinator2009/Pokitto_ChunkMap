#include <Pokitto.h>
#include <miloslav.h>
#include <LibLog>
#include <LibAudio>
#include "ChunkMap.h"
#include "tiles.h"

using PC=Pokitto::Core;
using PD=Pokitto::Display;
using PB=Pokitto::Buttons;

static const uint8_t playerSprite[] =
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0xE2,0x3A,0x03,0x03,0x03,0xE2,0xE2,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x3A,0xBC,0xBA,0xBC,0xBE,0xBA,0xBA,0xBC,0xE2,0x00,0x00,0x00,
	0x00,0x00,0x00,0x3A,0xBE,0x1B,0xE2,0x1E,0xBE,0x45,0x45,0xBA,0xBC,0xE2,0x00,0x00,
	0x00,0x00,0xE2,0xBC,0xBE,0xBE,0xBE,0xBE,0xBE,0xBE,0xBE,0xBE,0xBE,0x3A,0x00,0x00,
	0x00,0x00,0xE2,0xBE,0xBE,0xBE,0xBE,0xBA,0xBE,0xBA,0xBE,0xBE,0xBE,0x03,0x00,0x00,
	0x00,0x00,0xE2,0xBE,0xBE,0xBE,0xBE,0xBC,0xBA,0xBE,0xBE,0xBE,0xBE,0x03,0x00,0x00,
	0x00,0x00,0xE2,0xBC,0xBE,0x31,0xBC,0xBE,0xBE,0xBE,0xBC,0x31,0xBE,0x3A,0x00,0x00,
	0x00,0x00,0x00,0x3A,0xBE,0xBE,0x31,0x03,0x03,0x03,0x31,0xBE,0xBC,0xE2,0x00,0x00,
	0x00,0x00,0x00,0x00,0x3A,0xBE,0xBE,0xBC,0x03,0xBC,0xBE,0xBC,0xE2,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0xE2,0x3A,0x03,0x03,0x03,0xE2,0xE2,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

File mapData;
ChunkMap map;
int32_t playerX = 0;
int32_t playerY = 0;
int32_t screenX = playerX - 102;
int32_t screenY = playerY - 80;

void init()
{
	PD::loadRGBPalette(miloslav);
	PD::persistence = true;
	PD::invisiblecolor = 0;
	mapData.openRO("/chunks.dat");
	map.setup(&mapData, 4, 4, tiles);
}

void update()
{
	PB::pollButtons();
	if (PB::leftBtn())
		--playerX;
	else if (PB::rightBtn())
		++playerX;
	if (PB::upBtn())
		--playerY;
	else if (PB::downBtn())
		++playerY;
	if (playerX < 0)
		playerX = 0;
	if (playerX > 1024 - 16)
		playerX = 1024 - 16;
	if (playerY < 0)
		playerY = 0;
	if (playerY > 1024 - 16)
		playerY = 1024 - 16;
	screenX = playerX - 102;
	screenY = playerY - 80;
	if (screenX < 0)
		screenX = 0;
	if (screenX > 1024 - 220)
		screenX = 1024 - 220;
	if (screenY < 0)
		screenY = 0;
	if (screenY > 1024 - 176)
		screenY = 1024 - 176;
	map.update(screenX, screenY);
	PD::drawSpriteBitmap(playerX - screenX, playerY - screenY, 16, 16, playerSprite);
}
